<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd">
    
    <context:component-scan base-package="com.commodityshareplatform.subject">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 导入配置文件
       若要切换数据库环境则需改动数据库配置文件
     -->
    <context:property-placeholder location="classpath:/dev/jdbc.properties"></context:property-placeholder>

    <!--数据库连接池配置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close" lazy-init="false">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialSize" value="${jdbc.initialSize}" />
        <property name="maxActive" value="${jdbc.maxActive}" />
        <property name="maxWait" value="${jdbc.maxWait}" />

<!--        <property name="filters" value="stat,wall" />-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="3000" />-->
<!--        <property name="minEvictableIdleTimeMillis" value="300000" />-->
<!--        <property name="validationQuery" value="SELECT 'x'" />-->
<!--        <property name="testWhileIdle" value="true" />-->
<!--        <property name="testOnBorrow" value="false" />-->
<!--        <property name="testOnReturn" value="false" />-->
<!--        <property name="poolPreparedStatements" value="true" />-->
<!--        <property name="maxPoolPreparedStatementPerConnectionSize"-->
<!--                  value="20" />-->
    </bean>


    <!-- jdbcTemplate -->
    <bean id="jdbc" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
    </bean>

    <!-- mybatis配置 -->

    <!-- 配置扫描器，将mybatis接口的实现加到ioc容器中 -->
    <!-- 配置和mybatis的整合 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定mybatis全局配置的文件的位置 -->
        <property name="configLocation" value="classpath:mybatis.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <!-- 指定mapper文件的位置 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!-- 配置一个可以批量操作的sqlSession -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>

    <!-- 配置扫描器，将mybatis接口的实现加到ioc容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描所有dao接口的实现加入到ioc容器中 -->
        <property name="basePackage" value="com.commodityshareplatform.subject.dao"></property>
    </bean>

    <!-- 事务控制的配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 控制数据源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

</beans>